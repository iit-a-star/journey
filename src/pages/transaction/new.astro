---
import { addTransaction, getProfileAccounts, setDB } from '../../api';
import Main from '../../layouts/Main.astro';
import { checkParams, currentUser, parseBody } from '../../utils';

setDB(Astro.locals.runtime?.env?.DB);

const profile = await currentUser(Astro.cookies);

if (!profile) {
	return Astro.redirect('/login');
}

let error: string | undefined;

const referer = Astro.request.headers.get('referer');

const refererRegex = new RegExp(Astro.url.host + '/account/([a-f0-9]{32})');

const from_id = referer && refererRegex.test(referer) ? refererRegex.exec(referer)![1] : null;

const accounts = await getProfileAccounts(profile.id);

try {
	if (Astro.request.method == 'POST') {
		// parse body
		const body = await parseBody<'memo' | 'amount' | 'to' | 'from'>(Astro.request);

		checkParams(body, 'memo', 'amount', 'to', 'from');

		await addTransaction(body.from, body.to, +body.amount, body.memo);

		return Astro.redirect('/account/' + (from_id || body.to));
	}
} catch (e) {
	error = e;
}
---

<Main title="Add a transaction">
	{error && <div class="error">{error}</div>}
	<form method="post">
		<h2>Add a transaction</h2>
		<br /><br />
		<label for="from">From:</label>
		{from_id ? <>
			<input name="from" type="hidden" value={from_id} />
			<span>{from_id}</span>
		</> : <input name="from" size="32" />}
		<br />
		<label for="to">To:</label>
		{from_id ? <select name="to">
			<option value="" disabled selected>Select an account</option>
			{accounts.map(account => <option value={account.id}>{account.name}</option>)}
		</select> : <input name="to" size="32" />}
		<br />
		<label for="amount">Amount:</label>
		<input type="number" name="amount" />
		<br />
		<label for="memo">Memo:</label>
		<input type="text" name="memo" />
		<br /><br />
		<button>Save</button>
	</form>
</Main>

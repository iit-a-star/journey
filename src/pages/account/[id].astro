---
import { getAccount, getTransactions, setDB } from '../../api';
import TransactionLI from '../../components/TransactionLI.astro';
import Main from '../../layouts/Main.astro';
import { currentUser } from '../../utils';

setDB(Astro.locals.runtime?.env?.DB);

const profile = await currentUser(Astro.cookies);

if (!profile) {
	return Astro.redirect('/login');
}

const account = Astro.params.id ? await getAccount(Astro.params.id) : null;

if (!account) {
	return Astro.rewrite('/404');
}

if (account.profile != profile.id) {
	return Astro.rewrite('/403');
}

const transactions = account && (await getTransactions(account.id));

const balance = transactions?.reduce((total, tx) => total + (tx.from == account.id ? -1 : 1) * tx.amount, 0);

import '../../styles/transaction-li.css';
---

<style>
	.header {
		font-weight: bold;
		border: none;
	}
</style>
<Main title="Account">
	<div>
		<p>Account name: {account.name}</p>
		<p>Account type: {account.type}</p>
		<p>Account ID: {account.id}</p>
		<p>Balance: {typeof balance != 'number' ? 'Unknown' : `${balance >= 0 ? '' : '-'}$${Math.abs(balance)}`}</p>

		<h4>Transactions</h4>
		{
			!transactions ? (
				<p>
					<em>Couldn't fetch your transactions.</em>
				</p>
			) : (
				<ul>
					<li class="header">
						<p class="memo">Memo</p>
						<p class="amount">Amount</p>
						<p class="timestamp">Time</p>
						<p class="details">Details</p>
					</li>
					{transactions.map(tx => (
						<TransactionLI transaction={tx} account={account.id} />
					))}
				</ul>
			)
		}
	</div>
</Main>

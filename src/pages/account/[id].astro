---
import { getAccount, getTransactions, setDB } from '../../api';
import TransactionLI from '../../components/TransactionLI.astro';
import Main from '../../layouts/Main.astro';
import { currentUser } from '../../utils';

setDB(Astro.locals.runtime?.env?.DB);

const profile = await currentUser(Astro.cookies);

if (!profile) {
	return Astro.redirect('/login');
}

const account = Astro.params.id ? await getAccount(Astro.params.id) : null;

if (!account) {
	return Astro.rewrite('/404');
}

if (account.profile != profile.id) {
	return Astro.rewrite('/403');
}

const transactions = account && (await getTransactions(account.id));

const balance = transactions?.reduce((total, tx) => total + (tx.from == account.id ? -1 : 1) * tx.amount, 0);

const mobile = false;

import '../../styles/li.css';
import '../../styles/transaction-li.css';
import { capitalize } from 'utilium';
---
<style>
	.header {
		font-weight: bold;
		border: none;
	}

	ul {
		padding-left: 0;
	}

	.title {
		border: none;
	}
</style>
<Main title="Account">
	<div>
		{!transactions ? <p><em>Couldn't fetch your transactions.</em></p> : <ul>
			{!mobile && <>
				<li class="title"><p class="memo">{capitalize(account.type)} Account #{account.id}</p></li>
				<li class="title"><p class="memo">Nickname: {account.name}</p></li>
				<li class="title"><p class="amount">Balance: {typeof balance != 'number' ? 'Unknown' : `${balance >= 0 ? '' : '-'}$${Math.abs(balance)}`}</p></li>
				<li class="title"><span>â€‹</span></li>
			</>}
			<li class="header">
				<p class="memo">Memo</p>
				<p class="amount">Amount</p>
				<p class="timestamp">Time</p>
				<p class="details">Details</p>
			</li>
			{transactions.map(tx => <TransactionLI transaction={tx} account={account.id} />)}
		</ul>}

		<br />
		<div class="center"><a href="/transaction/new"><button>Add a transaction</button></a></div>
	</div>
</Main>

---
import { getAccount, Transaction } from '../api';

interface Props {
	transaction: Transaction;
	account?: string;
	memoColor?: string;
}

const { transaction, account, memoColor } = Astro.props;

const url = new URL(Astro.request.url);

const from = (await getAccount(transaction.from).catch(() => null)) || { id: null, name: null };
const to = (await getAccount(transaction.to).catch(() => null)) || { id: null, name: null };
const { amount, timestamp, memo, id } = transaction;

import '../styles/li.css';
import '../styles/transaction-li.css';
---

{
	account ? <li>
		<p class="memo" style={memoColor && url.searchParams.has('colors') ? `color:color-mix(in hsl, var(--text-color), ${memoColor} 100%)` : ''}>{transaction.memo}</p>
		<p class="amount">
			{from.id == account ? '-' : '+'} ${transaction.amount}
		</p>
		<p class="timestamp">{new Date(timestamp).toLocaleString()}</p>
		<p class="details">
			<a href={`/transaction/${id}?from=${Astro.url.pathname}`}>View Details â†’</a>
		</p>
	</li> :	<li>
		<p class="from">
			From <a href={`/account/${from.id}`}>{from.name || <em>Unknown</em>}</a>
		</p>
		<p class="to">
			To <a href={`/account/${to.id}`}>{to.name || <em>Unknown</em>}</a>
		</p>
		<p class="amount">Amount ${transaction.amount}</p>
		<p class="timestamp">{new Date(timestamp).toLocaleString()}</p>
	</li>
}
